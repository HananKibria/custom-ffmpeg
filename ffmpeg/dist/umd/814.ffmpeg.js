!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.FFmpegWASM=t():e.FFmpegWASM=t()}(self,(()=>(()=>{var e={454:e=>{function t(e){return Promise.resolve().then((()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}))}t.keys=()=>[],t.resolve=t,t.id=454,e.exports=t}},t={};function r(a){var o=t[a];if(void 0!==o)return o.exports;var s=t[a]={exports:{}};return e[a](s,s.exports,r),s.exports}return r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";const e="https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd/ffmpeg-core.js";var t;!function(e){e.LOAD="LOAD",e.EXEC="EXEC",e.WRITE_FILE="WRITE_FILE",e.READ_FILE="READ_FILE",e.DELETE_FILE="DELETE_FILE",e.RENAME="RENAME",e.CREATE_DIR="CREATE_DIR",e.LIST_DIR="LIST_DIR",e.DELETE_DIR="DELETE_DIR",e.ERROR="ERROR",e.DOWNLOAD="DOWNLOAD",e.PROGRESS="PROGRESS",e.LOG="LOG",e.MOUNT="MOUNT",e.UNMOUNT="UNMOUNT"}(t||(t={}));const a=new Error("unknown message type"),o=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),s=(new Error("called FFmpeg.terminate()"),new Error("failed to import ffmpeg-core.js"));let n;self.onmessage=async({data:{id:i,type:E,data:c}})=>{const p=[];let f;try{if(E!==t.LOAD&&!n)throw o;switch(E){case t.LOAD:f=await(async({coreURL:a,wasmURL:o,workerURL:i})=>{const E=!n;try{a||(a=e),importScripts(a)}catch{if(a&&a!==e||(a=e.replace("/umd/","/esm/")),self.createFFmpegCore=(await r(454)(a)).default,!self.createFFmpegCore)throw s}const c=a,p=o||a.replace(/.js$/g,".wasm"),f=i||a.replace(/.js$/g,".worker.js");return n=await self.createFFmpegCore({mainScriptUrlOrBlob:`${c}#${btoa(JSON.stringify({wasmURL:p,workerURL:f}))}`}),n.setLogger((e=>self.postMessage({type:t.LOG,data:e}))),n.setProgress((e=>self.postMessage({type:t.PROGRESS,data:e}))),E})(c);break;case t.EXEC:f=await(async({args:e,timeout:t=-1})=>{n.setTimeout(t);let r=await n.exec(...e);return n.reset(),r})(c);break;case t.WRITE_FILE:f=(({path:e,data:t})=>(n.FS.writeFile(e,t),!0))(c);break;case t.READ_FILE:f=(({path:e,encoding:t})=>n.FS.readFile(e,{encoding:t}))(c);break;case t.DELETE_FILE:f=(({path:e})=>(n.FS.unlink(e),!0))(c);break;case t.RENAME:f=(({oldPath:e,newPath:t})=>(n.FS.rename(e,t),!0))(c);break;case t.CREATE_DIR:f=(({path:e})=>(n.FS.mkdir(e),!0))(c);break;case t.LIST_DIR:f=(({path:e})=>{const t=n.FS.readdir(e),r=[];for(const a of t){const t=n.FS.stat(`${e}/${a}`),o=n.FS.isDir(t.mode);r.push({name:a,isDir:o})}return r})(c);break;case t.DELETE_DIR:f=(({path:e})=>(n.FS.rmdir(e),!0))(c);break;case t.MOUNT:f=(({fsType:e,options:t,mountPoint:r})=>{const a=e,o=n.FS.filesystems[a];return!!o&&(n.FS.mount(o,t,r),!0)})(c);break;case t.UNMOUNT:f=(({mountPoint:e})=>(n.FS.unmount(e),!0))(c);break;case"exit":f=(()=>{if(null===n)throw"Not Loaded";return n.exitJS(1),!0})();break;default:throw a}}catch(e){return void self.postMessage({id:i,type:t.ERROR,data:e.toString()})}f instanceof Uint8Array&&p.push(f.buffer),self.postMessage({id:i,type:E,data:f},p)}})(),{}})()));
//# sourceMappingURL=814.ffmpeg.js.map